#include<stdio.h>
class Node {
    public: 
    int i,j;
    int n,h;
};
int N;
Node heap[2000000];

int flip(int a, int b,int node){
 
    int i=heap[node].i;
    int j = heap[node].j;
    //  printf("%d,%d,%d,%d\n",a,b,i,j);
    if(a<i||b>j){
        int c= 1;
        int d = 1/(c-1);
    }
    if(i==j&&a==b){
        heap[node].h = 1-heap[node].h;
        return 0;
    }
    int mid = (i+j)/2;
    int m=0;
    if(b<=mid){
        flip(a,b,2*node+1);
    } else if(a>mid){
        flip(a,b,2*node+2);
    } else {
        flip(a,mid,2*node+1);
        flip(mid+1,b,2*node+2);
    }
    heap[node].h = heap[2*node+1].h+heap[2*node+2].h;
}
void update(int a, int b){
    //printf("update with %d,%d\n",a,b);
    flip(a, b, 0);
}
int qr(int a , int b, int node){
    int i= heap[node].i;
    int j = heap[node].j;
    int h = heap[node].h;
    if(a==i&&b==j){
        return h;
    }
    int mid = (i+j)/2;
    int r=0;
    if(b<=mid){
        r+=qr(a,b,2*node+1);
    } else if(a>mid){
        r+=qr(a,b,2*node+2);
    } else {
        r+=qr(a,mid,2*node+1);
        r+=qr(mid+1,b,2*node+1);
    }
    return r;
}
void query(int a, int b){
    printf("%d\n",qr(a,b,0));
}
void init(int a,int b,int node){
    if(a==b){
        heap[node].h = 0;
        heap[node].n = 1;
        heap[node].i = a;
        heap[node].j = b;
        return;
    }
    heap[node].i = a;
    heap[node].j = b;
    int m=0;
    int mid = (a+b)/2;
    init(a,mid,2*node+1);
    init(mid+1,b,2*node+2);
    heap[node].n = heap[2*node+1].n + heap[2*node+2].n;
    heap[node].h = heap[2*node+1].h + heap[2*node+2].h;
}
int main(){
    int Q;
    scanf("%d",&N);
    init(0,N-1,0);
   // printf("DEBUG:h: %d, n: %d \n ",heap[0].h,heap[0].n);
    scanf("%d",&Q);
    while(Q--){
        int t,a,b;
        scanf("%d %d %d",&t,&a,&b);
        if(t){
            query(a,b);
        } else {
            update(a,b);
        }
    }
}



