#include<iostream>
#include<vector>
#include<stack>
#define VVI vector<vector <int> >
#define VI vector<int>
#define STACK stack<int>
using namespace std;

void emptyStacks(VVI &inp,STACK &sti,STACK &stj,int &val){
    while(!sti.empty()){
        int i = sti.top(); sti.pop();
        int j = stj.top(); stj.pop();
        if(inp[i][j]<val){
            inp[i][j] = val;
        }
    }
    val = 0;
}
void update(VVI & inp,STACK &sti,STACK &stj,int i, int j,int &val){
    if(inp[i][j]>0){
        val++;
        sti.push(i);
        stj.push(j);
    } else {
        emptyStacks(inp,sti,stj,val);
    }
}
void hs(VVI &inp){
    int val = 0;
    int n=inp.size();
    STACK sti,stj;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            update(inp,sti,stj,i,j,val);
        }
        emptyStacks(inp,sti,stj,val);
    }
}
void vs(VVI &inp){
    int val = 0;
    int n=inp.size();
    STACK sti,stj;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            update(inp,sti,stj,j,i,val);
        }
        emptyStacks(inp,sti,stj,val);
    }
}

void d1s1(VVI &inp){
    int val = 0;
    int n=inp.size();
    STACK sti,stj;
    for(int i=0;i<n;i++){
        for(int j=0;j<=i;j++){
            update(inp,sti,stj,i-j,j,val);
        }
        emptyStacks(inp,sti,stj,val);
    }
}
void d1s2(VVI &inp){
    int val = 0;
    int n=inp.size();
    STACK sti,stj;
    for(int i=0;i<n;i++){
        for(int j=0;j<=i;j++){
            update(inp,sti,stj,(n-1)-j,(n-1)-(i-j),val);
        }
        emptyStacks(inp,sti,stj,val);
    }
}
void d2s1(VVI &inp){
    int val = 0;
    int n=inp.size();
    STACK sti,stj;
    for(int i=0;i<n;i++){
        for(int j=0;j<=i;j++){
            update(inp,sti,stj,j,(n-1)-(i-j),val);
        }
        emptyStacks(inp,sti,stj,val);
    }
}
void d2s2(VVI &inp){
    int val = 0;
    int n=inp.size();
    STACK sti,stj;
    for(int i=0;i<n;i++){
        for(int j=0;j<=i;j++){
            update(inp,sti,stj,(n-1)-(i-j),j,val);
        }
        emptyStacks(inp,sti,stj,val);
    }
}
int main(){
    int n;
    char c;
    cin>>n;
    VVI inp;
    inp.resize(n);
    for(int i=0;i<n;i++){
        inp[i].resize(n);
        for(int j=0;j<n;j++){
            cin>>c;
            if(c=='.'){
                inp[i][j]=0;
            } else {
                inp[i][j]=1;
            }
        }
    }
    // horizontal scan;
    hs(inp);
    vs(inp); d1s1(inp); d1s2(inp); d2s1(inp);d2s2(inp);
    for(int l=0;l<n;l++){
        for(int m=0;m<n;m++){
            cout<<inp[l][m];
            if(m<n-1){
                cout<<" ";
            }
        }
        cout<<endl;
    }

}
