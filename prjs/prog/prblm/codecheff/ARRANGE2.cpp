#include<iostream>
#include<cstring>
#include<cstdio>
unsigned long long abc[6][500]={
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12}
,{12,12,14,14,16,18,18,22,28,28,28,28,28,28,28,28,28,28,28,28,30,30,30,30,38,48,48,52,64,68,68,68,68,68,68,68,68,68,68,68,76,76,90,90,90,96,96,100,106,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,110,112,112,114,114,114,114,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,124,126,126,126,126,128,128,130,132,132,134,136,136,136,138,138,138,140,152,156,156,156,156,156,156,156,156,156,156,156,158,162,162,162,166,166,166,166,166,166,166,166,166,166,166,184,184,192,192,196,196,198,198,198,200,202,202,202,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,206,208,208,208,210,210,214,220,220,228,228,242,242,242,242,242,242,242,242,244,246,246,246,246,252,252,254,262,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,268,274,276,276,276,276,276,276,276,276,276,276,276,276,278,280,280,280,282,282,282,284,284,284,284,284,284,284,290,290,294,294,296,296,298,300,300,300,300,300,300,300,300}
,{316,316,356,356,396,418,418,454,504,528,528,528,528,528,528,528,528,528,528,528,560,560,560,566,624,684,696,728,798,846,846,846,852,852,858,870,882,890,894,894,946,946,1020,1044,1044,1086,1086,1122,1172,1212,1212,1212,1212,1212,1212,1212,1236,1272,1308,1308,1308,1308,1324,1340,1356,1356,1356,1356,1356,1356,1356,1356,1368,1380,1392,1410,1416,1416,1428,1428,1428,1428,1440,1452,1464,1482,1488,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1504,1514,1514,1514,1524,1528,1528,1546,1564,1572,1604,1604,1604,1610,1668,1680,1684,1696,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1704,1710,1710,1710,1716,1728,1736,1748,1752,1752,1766,1800,1800,1824,1824,1838,1838,1856,1874,1884,1908,1926,1926,1926,1944,1944,1980,2014,2090,2118,2118,2130,2130,2142,2154,2172,2172,2178,2190,2190,2218,2262,2262,2278,2322,2322,2322,2322,2322,2322,2322,2334,2334,2346,2358,2458,2470,2528,2528,2580,2592,2610,2610,2610,2628,2652,2652,2662,2692,2700,2700,2700,2700,2700,2700,2700,2700,2700,2700,2700,2700,2700,2706,2706,2712,2724,2728,2736,2748,2748,2748,2754,2754,2754,2760,2772,2780,2784,2796,2796,2796,2796,2796,2796,2796,2796,2796,2796,2796,2796,2796,2820,2844,2844,2844,2844,2844,2844,2844,2844,2844,2844,2844,2844,2844,2844,2880,2916,2940,2940,2940,2952,2964,2964,2976,2994,2994,3006,3012,3012,3012,3024,3036,3036,3048,3066,3078,3078,3084,3084,3084,3100,3116,3116,3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,3148,3170,3192,3192,3192,3202,3202,3222,3252,3264,3316,3316,3390,3414,3414,3446,3462,3486,3510,3510,3524,3558,3558,3582,3582,3634,3658,3684,3738,3756,3756,3780,3804,3804,3804,3836,3860,3884,3900,3900,3900,3900,3900,3900,3900,3900,3900,3900,3900,3900,3912,3924,3936,3936,3936,3936,3936,3956,3986,4008,4008,4008,4008,4008,4008,4008,4008,4008,4008,4008,4020,4038,4056,4056,4056,4072,4072,4072,4094,4104,4104,4104,4104,4104,4104,4152,4152,4196,4196,4236,4252,4274,4296,4296,4296,4308,4308,4316,4328,4332}
,{4560,4560,4878,4926,5244,5394,5490,5718,6000,6204,6204,6204,6204,6204,6204,6204,6204,6204,6204,6204,6438,6438,6438,6582,6918,7244,7436,7640,7996,8332,8380,8380,8524,8524,8668,8836,9028,9172,9268,9340,9676,9676,10046,10286,10286,10544,10640,10868,11150,11468,11564,11564,11660,11756,11852,11852,12092,12428,12764,12956,13100,13100,13388,13676,13964,13964,13964,13964,13964,13964,14060,14060,14252,14444,14636,14876,15020,15020,15236,15308,15404,15404,15596,15788,15980,16220,16364,16580,16580,16652,16652,16652,16748,16844,16940,17036,17084,17156,17228,17228,17300,17432,17432,17480,17612,17684,17756,17930,18080,18152,18386,18386,18386,18530,18866,19034,19130,19322,19466,19538,19538,19538,19538,19538,19538,19538,19538,19538,19538,19538,19586,19730,19730,19730,19874,20042,20186,20378,20474,20546,20744,21014,21014,21254,21254,21404,21476,21650,21800,21932,22166,22340,22340,22436,22610,22610,22946,23216,23652,23952,24048,24240,24240,24432,24624,24864,24864,25008,25224,25296,25602,25998,25998,26286,26682,26682,26682,26682,26682,26682,26778,26970,26970,27162,27354,27856,28072,28408,28408,28768,28864,29038,29038,29134,29308,29542,29614,29746,30004,30124,30124,30172,30220,30220,30268,30316,30388,30460,30556,30556,30604,30604,30748,30748,30892,31060,31156,31300,31492,31564,31612,31756,31756,31756,31900,32068,32212,32308,32500,32572,32572,32572,32572,32572,32572,32572,32572,32572,32572,32572,32716,32956,33196,33196,33196,33292,33364,33436,33532,33580,33676,33772,33868,33868,33964,33964,34300,34636,34876,35068,35164,35356,35548,35548,35740,35980,35980,36196,36340,36412,36508,36700,36892,36892,37084,37324,37540,37540,37684,37756,37900,38188,38476,38476,38764,38764,38764,38764,38764,38764,38764,38860,38956,38956,39052,39148,39220,39292,39340,39340,39472,39718,39964,40108,40108,40282,40474,40726,41008,41080,41416,41416,41786,42026,42026,42314,42506,42770,43034,43130,43328,43598,43598,43838,43838,44176,44440,44662,45006,45180,45324,45564,45804,45804,45804,46092,46356,46620,46812,46908,46908,46908,46908,46908,46908,46908,46908,46908,46908,46908,47016,47088,47160,47160,47160,47160,47352,47604,47886,48132,48132,48228,48324,48420,48420,48516,48516,48588,48660,48708,48804,48978,49152,49248,49248,49410,49482,49482,49656,49788,49788,49884,49980,50076,50076,50370,50442,50718,50718,51036,51168,51414,51660,51804,51804,51912,51912,52008,52140,52236}
,{54108,54108,56236,57244,59372,60318,61422,62762,64256,65756,65756,65756,65810,65810,65828,65828,65828,65828,65828,65828,67356,67374,67410,68580,70276,71934,73392,74486,76160,78244,79072,79072,80290,80386,81604,82762,84214,85306,86092,87196,89024,89042,90636,91980,91980,93402,94506,95846,97340,99468,100956,100956,102060,103164,104268,104268,105924,107778,109608,111384,113496,113496,115734,118098,120336,120648,120816,121056,121272,121272,122616,122616,124050,125586,127044,128715,130005,130014,131652,132816,134160,134160,135612,137172,138624,140256,141474,143106,143124,144288,145008,145008,146112,147216,148320,149808,150816,152160,153504,154080,155004,156390,156390,157398,158784,159492,160356,161698,162800,163712,165240,165258,165294,166464,168160,169354,170248,171682,172792,173896,173896,173896,173896,173896,173896,173944,173956,173956,173968,173968,174796,176086,176086,176254,177544,178738,179938,181372,182176,183280,184730,186138,186156,187620,187620,188734,189598,190940,192042,193428,195448,196790,196790,197894,199236,199356,201444,202834,204880,206964,208308,209766,209790,211314,212760,214614,214854,216144,217908,219072,221800,224328,224328,226656,229184,229184,229184,229184,229184,229184,230528,231986,232010,233534,234980,237254,238898,240576,240576,242804,243944,245286,245286,246390,247732,249752,251096,252482,254568,255924,256356,257364,258372,258372,259380,260004,260868,261732,262836,263412,264240,264240,265458,265554,266772,268164,269364,270636,272196,273300,274128,275418,275418,275586,276876,278214,279666,280560,282084,283188,283188,283356,283524,283524,283692,283926,284322,284502,284628,284628,285924,287580,289236,289716,289716,290676,291540,292404,293508,294516,296004,297108,298212,298212,299316,299316,301440,303294,304656,306432,307776,309228,310680,310788,312240,314166,314454,316290,317604,318768,320112,321558,322992,323082,324540,326211,327951,327960,329148,330312,332424,334662,336900,337026,339264,339282,339282,339318,339336,339336,340056,341160,342264,342264,343368,344856,346200,347544,348552,349128,350868,352918,354968,356696,356696,357774,359118,360602,362156,363128,364956,364974,366568,367912,367912,369514,370882,372454,374008,375112,376562,377970,377988,379452,379452,381138,382818,384004,385670,387012,388308,389964,391620,392100,392100,393702,395442,397014,398196,399300,399300,399360,399360,399420,399420,399420,399420,399420,399420,399420,400644,401616,402588,403308,403308,403308,404652,406136,407690,409740,410460,411564,412668,413772,413772,414828,414828,415812,416796,417804,418944,420286,421628,422732,422732,423984,424968,424968,426274,427660,428380,429484,430588,431692,431692,433336,434320,435948,435948,438076,439816,441866,443916,445644,445644,446868,447444,448524,449772,450972}
};
using namespace std;
unsigned long long ul[11]={5,50,500,5000,50000LLU,500000LLU,5000000LLU,50000000LLU,500000000LLU,5000000000LLU,50000000000LLU};
unsigned long long nn[11]={9,99,999,9999,99999LLU,999999LLU,9999999LLU,99999999LLU,999999999LLU,9999999999LLU,99999999999LLU};
unsigned long long calc(unsigned long long l, unsigned long long m){
   if(l>m) return 0;
     if(m<=100000) return 0;
     if(l<=100000) l=100000;
     if(l%9>0){
        l=l+9-l%9;
     }
     if(m%9>0){
        m=m-m%9;
     }
     unsigned long long i2,i1,tmp=l,nd=0,count=0;
     int vec1[10]={0},nb = sizeof(int)*10,i;
     while(tmp){
      tmp/=10; nd++;
     }
     nd--;
     for(;l<=m;l+=9){
         if(l>=ul[nd]){
             l=nn[nd++]+9;
         }
         i1=l;
         i2 = i1<<1;
         while(i1){
             vec1[i1%10]++;
             i1/=10;
         }
         while(i2){
           int i = i2%10;
           if(vec1[i]<1){
              break;
           } else {
              vec1[i]--;
           }
           i2/=10;
        }
        if(i2<1){ count++;
        }
        memset(vec1,0,nb);    
     }
     return count; 
}
unsigned long long powten[11]={1,10,100,1000,10000,100000,1000000ULL,10000000ULL,100000000ULL,1000000000ULL,10000000000ULL};
// reads cache and returns all permutes less than or equal x*(10^y)
long readCache(int x, int y){
    if(x>=500){
      x=499;
    }
    y=y-3;
    return abc[y][x];
}
// returns order such that 10^(order-1) < n <= 10^order 
int orderof(unsigned long long n){
    int order=0;
    n--;
    while(n){  // use of --n instead of n-- is deliberate
        order++; n/=10;
    }
    return order;
}
// calculates x,y such that x*(10^y)  <= n < (x+1)*(10^y)
void hashit(unsigned long long n,int &x, int &y){
   int s = orderof(n);
   y=s-3;
   if(y<0){
    y=0;
   }
   x=n/powten[y];
}
long fastcalc(unsigned long long l,unsigned long long m){
int lx,ly,mx,my;
  hashit(l,lx,ly);
  hashit(m,mx,my);
  cout<<"lx:"<<lx<<" ly:"<<ly<<" mx:"<<mx<<" my:"<<my<<endl;
  cout<<"calc("<<l<<","<<(lx+1)*powten[ly]<<")+(readCache("<<mx<<","<<my<<")-readCache("<<(lx+1)<<","<<ly<<"))+calc("<<mx*powten[my]+1<<","<<m<<");"<<endl;
  return calc(l,(lx+1)*powten[ly])+(readCache(mx,my)-readCache((lx+1),ly))+calc(mx*powten[my]+1,m);
}
int main(){
 unsigned long long l,m;
  int T;
 cin>>T;
 while(T--){
 cin>>l>>m;
 cout<<l<<","<<m<<endl;
 cout<<fastcalc(l,m)<<endl;
 }
}
